[tox]
envlist = py{38,39}
toxworkdir=../.tox
download=true

[pytest]
DJANGO_SETTINGS_MODULE = tracker.settings
setenv =
    TRACKER_ENV = {env:TRACKER_ENV:development}
python_files = tests.py test_*.py *_tests.py

[checkersenv]
deps =
    pycodestyle
    flake8
    black
    bandit

[developmentenv]
deps = -r../requirements/development.txt

[flake8]
max-line-length = 88
exclude =
    .git,
    .tox,
    __pycache__,
    migrations,
    resources,
ignore =
    F401,

[pycodestyle]
max-line-length = 88
exclude =
    .git,
    .tox,
    __pycache__,
    migrations,
    resources,

[black]
max-line-length = 88
exclude =
    .git,
    .tox,
    __pycache__,
    migrations,
    resources,

[testenv:py{38,39}-pycodestyle]
description = Runs pycodestyle style checker. See: https://github.com/pycqa/pycodestyle
envdir =
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = pycodestyle .

[testenv:py{38,39}-flake8]
description = Runs flake8 style checker. See: https://github.com/pycqa/flake8
envdir =
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = flake8 .

[testenv:py{38,39}-black-check]
description = Runs black to check the code style. See: https://github.com/psf/black
envdir =
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = black . --check --diff

[testenv:py{38,39}-black-format]
description = Runs black to reformat code to style guide. See: https://github.com/psf/black
envdir =
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = black .

[testenv:py{38,39}-bandit]
description = Runs bandit security linter. See: https://github.com/pycqa/bandit
envdir =
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = bandit -x ./__pycache__,*tests*,./venv -r {toxinidir}

[testenv:py{38,39}-pytest]
description = Runs pytest. See: https://pytest-django.readthedocs.io/en/latest/
setenv = {[pytest]setenv}
envdir =
    py38: {toxworkdir}/.py38-testing
    py39: {toxworkdir}/.py39-testing
skip_install = true
deps =
    {[developmentenv]deps}
    pytest-django
commands = pytest .
