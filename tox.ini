[tox]
envlist = py{39,310}
toxworkdir=.tox
download=true

[checkerenv]
deps =
    bandit[toml]
    black
    flake8
    pycodestyle

[pycodestyle]
max-line-length = 88
exclude =
    .coverage,
    .eggs,
    .git,
    .tox,
    .pytest_cache,
    build,
    coverage,
    dist,
    venv,
    migrations,
    __pycache__,
[flake8]
max-line-length = 88
exclude =
    .coverage,
    .eggs,
    .git,
    .tox,
    .pytest_cache,
    build,
    coverage,
    dist,
    venv,
    migrations,
    __pycache__,

[testenv:py{39,310}-pycodestyle]
description = Runs pycodestyle style checker. See: https://github.com/pycqa/pycodestyleenvdir =
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = pycodestyle {toxinidir}

[testenv:py{39,310}-flake8]
description = Runs flake8 style checker. See: https://github.com/pycqa/flake8envdir =
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = flake8 {toxinidir}

[testenv:py{39,310}-black-check]
description = Runs black to check the code style. See: https://github.com/psf/blackenvdir =
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black {toxinidir} --check --diff

[testenv:py{39,310}-black-format]
description = Runs black to reformat code to style guide. See: https://github.com/psf/blackenvdir =
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black {toxinidir}

[testenv:py{39,310}-bandit]
description = Runs bandit security linter. See: https://github.com/pycqa/banditenvdir =
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = bandit -c pyproject.toml -r {toxinidir}/src
