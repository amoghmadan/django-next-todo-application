[tox]
envlist = py{310,311}
toxworkdir=.tox
download=true

[checkerenv]
deps =
    bandit[toml]
    black
    flake8
    mypy
    pycodestyle

[pycodestyle]
max-line-length = 88
exclude =
    .coverage,
    .eggs,
    .git,
    .tox,
    .pytest_cache,
    build,
    coverage,
    dist,
    venv,
    migrations,
    __pycache__,

[flake8]
max-line-length = 88
exclude =
    .coverage,
    .eggs,
    .git,
    .tox,
    .pytest_cache,
    build,
    coverage,
    dist,
    venv,
    migrations,
    __pycache__,

[testenv:py{310,311}-pycodestyle]
description = Runs pycodestyle style checker. See: https://pycodestyle.pycqa.org/en/stable/
envdir =
    py310: {toxworkdir}/.py310-checkers
    py311: {toxworkdir}/.py311-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = pycodestyle {toxinidir}

[testenv:py{310,311}-flake8]
description = Runs flake8 style checker. See: https://flake8.pycqa.org/en/stable/
envdir =
    py310: {toxworkdir}/.py310-checkers
    py311: {toxworkdir}/.py311-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = flake8 {toxinidir}

[testenv:py{310,311}-black-check]
description = Runs black to check the code style. See: https://black.readthedocs.io/en/stable/
envdir =
    py310: {toxworkdir}/.py310-checkers
    py311: {toxworkdir}/.py311-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black {toxinidir} --check --diff

[testenv:py{310,311}-black-format]
description = Runs black to reformat code to style guide. See: https://black.readthedocs.io/en/stable/
envdir =
    py310: {toxworkdir}/.py310-checkers
    py311: {toxworkdir}/.py311-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black {toxinidir}

[testenv:py{310,311}-bandit]
description = Runs bandit security linter. See: https://bandit.readthedocs.io/en/latest/
envdir =
    py310: {toxworkdir}/.py310-checkers
    py311: {toxworkdir}/.py311-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = bandit -c pyproject.toml -r {toxinidir}/src

[testenv:py{310,311}-mypy]
description = Runs mypy type checker. See: https://github.com/python/mypy
envdir =
    py310: {toxworkdir}/.py310-checkers
    py311: {toxworkdir}/.py311-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = mypy {toxinidir} --install-types --non-interactive

[testenv:py{310,311}-coverage]
description = Runs code coverage. See: https://coverage.readthedocs.io/en/6.4.4/
envdir =
    py310: {toxworkdir}/.py310-coverage
    py311: {toxworkdir}/.py311-coverage
skip_install = true
deps =
    .
    coverage
    django-extensions
commands =
    coverage run src/manage.py test account
    coverage run src/manage.py test task
    coverage html
